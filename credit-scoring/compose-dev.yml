services:
  mlflow:
    image: credit-ai/mlflow
    build: ./docker/mlflow
    ports:
      - "${MLFLOW_PORT}:${MLFLOW_PORT}"
    env_file:
      - ./.env.dev
    volumes:
      - ./mlflow-artifact:/opt/artifacts
    command: "mlflow server --backend-store-uri ${MLFLOW_BACKEND_URI} --default-artifact-root file:///opt/artifacts --no-serve-artifacts --host ${MLFLOW_HOST} --port ${MLFLOW_PORT}"
  postgres-db:
    image: postgres
    environment:
      POSTGRES_USER: ${DB_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DB_POSTGRES_PASSWORD}
      PGPORT: ${DB_POSTGRES_PORT}
    env_file:
      - ./.env.dev
    healthcheck:
      test: pg_isready -U ${DB_POSTGRES_USER}
      interval: 20s
      timeout: 20s
      retries: 10
      start_period: 20s  
    ports:
      - "${DB_POSTGRES_PORT}:${DB_POSTGRES_PORT}"
    volumes:
      - ${DUMMY_DATASET_PATH}:/tmp/
      - ./docker/postgres-db/:/docker-entrypoint-initdb.d/
      - pg-db-data:/var/lib/postgresql/data
  api:
    image: credit-ai/api
    build: 
      context: ./
      dockerfile: ./docker/api/Dockerfile
    depends_on:
      postgres-db:
        condition: service_healthy
      mlflow:
        condition: service_started
    env_file:
      - ./.env.dev
    environment:
      - PYTHONPATH=/api/src
    ports:
      - "${API_PORT}:${API_PORT}"
    volumes:
      - ./api-logs:/tmp/logs/
      - ./mlflow-artifact:/opt/artifacts
      - ${DUMMY_DATASET_PATH}:/api/dataset/
    entrypoint: ["/bin/sh","-c"]
    command: 
      - |
        alembic upgrade head
        uvicorn src.main:app --host ${API_HOST} --port ${API_PORT} --log-config=./src/config/log-config.yaml

networks:
  default:

volumes:
  pg-db-data: